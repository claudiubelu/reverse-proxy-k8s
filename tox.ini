# Copyright 2023 Claudiu Belu
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
env_list = format, lint, static, unit

[vars]
src_path = {toxinidir}/src
tests_path = {toxinidir}/tests
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
setenv =
    PYTHONPATH = {toxinidir}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=pdb.set_trace
    PY_COLORS=1
passenv =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    ruff
commands =
    black {[vars]all_path}
    ruff --fix {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    ruff
    codespell
commands =
    codespell {toxinidir}
    ruff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    coverage[toml]
    -r {toxinidir}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
                 -m pytest \
                 --tb native \
                 -v \
                 -s \
                 {posargs} \
                 {[vars]tests_path}/unit
    coverage report

[testenv:static]
description = Run static type checks
deps =
    pyright
    -r {toxinidir}/requirements.txt
commands =
    pyright {posargs}

[testenv:integration]
description = Run integration tests
deps =
    pytest
    juju
    pytest-operator
    -r {toxinidir}/requirements.txt
commands =
    pytest -v \
           -s \
           --tb native \
           --log-cli-level=INFO \
           {posargs} \
           {[vars]tests_path}/integration
